FROM php:8.3.6-fpm-alpine

ENV APP_ENV=prod
ENV APP_PUBLIC_PATH=/var/www/mra/public
ENV COMPOSER_ALLOW_SUPERUSER=1
ENV APP_ID=mra
ARG APP_VERSION
ENV APP_VERSION=$APP_VERSION

RUN apk --no-cache add \
    libxml2-dev \
    cyrus-sasl-dev \
    curl \
    curl-dev \
    libmcrypt-dev \
    gmp-dev \
    bash \
    git \
    openssh \
    patch \
    pcre-dev \
    ncurses \
    findutils \
    zlib-dev \
    libzip-dev \
    # sqlite-dev is required for the pdo_sqlite extension.
    sqlite-dev \
    # icu-dev is a dependency required by the `intl` extension.
    icu-dev \
    # ffmpeg is needed for combining Reddit video and audio asset files.
    ffmpeg \
    # linux-headers is needed to avoid Xdebug installation error:
    # configure: error: rtnetlink.h is required, install the linux-headers package: apk add --update linux-headers
    # ERROR: `/tmp/pear/temp/xdebug/configure --with-php-config=/usr/local/bin/php-config' failed
    linux-headers

RUN docker-php-ext-install \
    pdo \
    pdo_sqlite \
    pdo_mysql \
    intl \
    # sysvsem is required for the RateLimiter Semaphore store.
    sysvsem

RUN docker-php-ext-install zip

# Configure php.
COPY ./build/php.prod.ini /usr/local/etc/php/php.ini

# Install Composer.
# https://stackoverflow.com/a/58694421
COPY --from=composer:latest /usr/bin/composer /usr/local/bin/composer
RUN echo "export PATH=$HOME/.composer/vendor/bin:$PATH" >> $HOME/.profile

# Copy application to image.
RUN mkdir /var/www/mra/
COPY src /var/www/mra
WORKDIR /var/www/mra
RUN rm -rf var

# Required environment variables and file must be set for composer install.
RUN cp .env.sample .env
RUN set -eux; \
    mkdir -p var/cache var/log; \
    if [ -f composer.json ]; then \
        composer install --prefer-dist --no-dev --no-autoloader --no-scripts --no-progress; \
        composer clear-cache; \
        composer dump-autoload --classmap-authoritative --no-dev; \
        composer dump-env prod; \
        composer run-script --no-dev post-install-cmd; \
        chmod +x bin/console; sync; \
    fi

RUN set -eux; \
    if [ -f .env.local.php ]; then \
        rm -f .env.local.php; \
    fi
VOLUME /var/www/mra/var

# Build Production AssetMapper assets.
RUN php bin/console importmap:install && \
    php bin/console asset-map:compile

# Cron setup.
ADD build/cron/crontab.txt /crontab.txt
RUN /usr/bin/crontab /crontab.txt

# Install Nginx.
RUN apk --no-cache add nginx
COPY build/nginx-site.conf /etc/nginx/http.d/default.conf

# Configure Entrypoint.
COPY ./entrypoint.sh /entrypoint.sh
RUN chmod u+x /entrypoint.sh

# Install Supervisor and update configuration files location.
RUN apk --no-cache add supervisor \
    && mkdir -p /var/log/supervisor
COPY ./build/supervisord.conf /etc/supervisor/supervisord.conf
COPY ./build/supervisord/cron.alpine.conf /etc/supervisor/conf.d/cron.conf

# Additional folder setup.
RUN mkdir /database
RUN mkdir /r-media

ENTRYPOINT ["/entrypoint.sh"]